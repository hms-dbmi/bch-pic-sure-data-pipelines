<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.40">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.7.2"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.7.2">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>DataPipeline</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>BCH PL Biobank</string>
              <string>BCH COVID-19</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.87">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;DataPipelineSelector&apos;) {
            steps {
                sh &apos;&apos;&apos;

                    set +x

                    echo &quot;selected data pipeline: ${DataPipeline}&quot;

                    dp=${DataPipeline}

                    if [ &quot;$dp&quot; = &quot;BCH PL Biobank&quot; ] ;
                    then
                        echo &quot;Clone Projects for BCH PL Biobank&quot;
                        echo &quot;$PWD&quot;
                        cd /opt/pic-sure-data-pipelines
                        git clone https://github.com/hms-dbmi/bch-pic-sure-airflow.git
                        ls -latr
                        cd bch-pic-sure-airflow
                        ls -altr

                    elif [ &quot;$dp&quot; = &quot;BCH COVID-19&quot; ] ;
                    then
                        echo &quot;Clone Projects for BCH COVID-19&quot;

                    else
                        echo &quot;Nothing to clone based on the selection&quot;
                    fi


                &apos;&apos;&apos;
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>